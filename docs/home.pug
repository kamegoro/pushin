extends layout.pug
block append head
	title PushIn.js

block append styles
	style.
		.demo-card-1 {
			left: 5%;
			top: 60%;
			max-width: 16rem;
		}

		@media ( min-width: 768px ) {
			.demo-card-1 {
				top: 50%;
				max-width: 19rem;
			}
		}

		.demo-card-2 {
			right: -20%;
			top: 30%;
			transform: scale(0.5);
			max-width: 37.5rem;
		}

		@media ( min-width: 768px ) {
			.demo-card-2 {
				right: 0;
				top: 40%;
			}
		}

		.demo-card-3 {
			background-color: rgb(116, 61, 187);
			max-width: 43.75rem;
			left: 0;
			top: 0;
			transform: scale( 0.5 );
		}

		#demo {
			height: 500px;
		}


block content
	header.container-fluid.py-5.bg-white.mt-5.mt-md-0.position-relative(style="z-index:1")
		div.row
			h1.my-4 About PushIn.js
			div
				p.lead PushIn.js is a lightweight parallax effect, built with JavaScript, that simulates an interactive dolly-in or push-in animation on a webpage.
				p Scroll down below to try out the effect, or browse some of the other examples on this site.
	section#demo
		div.pushin
			div.pushin-scene
				div.pushin-composition
					div.pushin-layer(data-pushin-transitions='false')
						div.mountain-0
					div.pushin-layer(data-pushin-transitions='false')
						div.mountain-1
							img(src='../../images/mountain-01-trees.svg')
					div.pushin-layer(data-pushin-transitions='false')
						div.mountain-2
							img(src='../../images/mountain-02-hill-1.svg')
					div.pushin-layer(data-pushin-transitions='false')
						div.mountain-3
							img(src='../../images/mountain-03-hill-2.svg')
					div.pushin-layer(data-pushin-transitions='false')
						div.mountain-4
							img(src='../../images/mountain-04-landscape.svg')
					div.pushin-layer(data-pushin-transitions='false')
						div.mountain-5
							img(src='../../images/mountain-05-logo.svg')
					div.pushin-layer(data-pushin-transitions='false')
						div.mountain-6
							img(src='../../images/mountain-06-sky.svg')

	section.container-fluid.py-5.bg-white.position-relative
		div.row
			.pt-4
				h2 Compatibility
				p PushIn.js supports all browsers that are ES5-compliant (IE8 and below are not supported).
			.pt-4
				h2 How does it work?
				p
					| This plugin uses a combination of JavaScript and CSS to create the illusion of objects moving forward or backward by manipulating their scale while the user scrolls on the page. The effect uses the modern browser's built in 
					a(href="https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame", target="_blank", rel="noopener noreferrer nofollow") requestAnimationFrame
					|  to deliver a performant experience that is cross-browser compatible.
				ul
					li Zero dependencies!
					li No canvas elements!
					li No webGL!
					li No flash!
			.pt-4
				h2 How much does this cost?
				p It's completely free open source code under the MIT License!
			.pt-4
				h2 How can I use it on my site?
				p
					| Check out the 
					a(href="https://github.com/nateplusplus/pushin") GitHub README
					|  to learn more about how to use this on your own projects.
			.pt-4
				h2 What do I do if I'm experiencing an issue?
				p
					| Please submit a 
					a(href="https://github.com/nateplusplus/pushin/issues/new?assignees=&labels=&template=bug_report.md&title=") bug report
					|  so I can put on my detective hat and look into it further!
block scripts
	script( defer ).
		var pushInOptions = {
			target: '#demo',
			scene: {
				fixedRatio: [1, 2],
			},
		};
		document.addEventListener( 'DOMContentLoaded', function() {
			pushInStart(pushInOptions);
		} );