extends layout.pug

block append head
	title PushIn.js - Examples: Scrollable Div

block append styles
	style.
		.box {
			margin: 60px auto;
			max-width: 750px;
			height: 350px;
			max-height: 100vh;
			background-color: #fafafa;
			outline: 3px dotted #dedede;
		}
		.pushin-layer { padding: 0 3em; }

block content
	div.container.my-5
		div.row
			div.col
				h1.my-4 Attach PushIn.js to scrollable elements with target.
				p The original concept of PushIn.js was focused on full-page animations. This approach leans heavily on the window scroll event, and each layer is fixed, meaning it is positioned relative to the viewport instead of being relatively positioned within the page content. This works great for full-page animations but it doesn't work well within the constraints of any sort of page layout.
				p By providing a "target" element, you can now position the effect within a container on the page. Doing so will attach any scroll events to that target element, and constrain the effect to live within that container.
				p.mt-5.mb-0.fw-bold Example: 
				code pushInStart({ target: document.querySelector('.container') });
				p.mt-5 Below is an example of PushIn.js being applied to a scrollable div element.
	div.box.mx-3.mx-md-auto
	div.pushin
		div.pushin-scene
			div.pushin-layer This example demonstrates using PushIn.js within a scrollable div.
			div.pushin-layer Optionally attach PushIn to any element.
			div.pushin-layer All event listeners will be added to the target element.

block scripts
	script( defer ).
		document.addEventListener( 'DOMContentLoaded', function() {
			pushInStart({
				target: document.querySelector('.box'),
			});
		} );